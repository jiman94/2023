클라우드 네이티브는 클라우드에서 확장 가능하고 탄력적이며 관리 가능한 애플리케이션을 구축하고 실행하기 위한 아키텍처 스타일입니다. 
클라우드 컴퓨팅과 컨테이너, 마이크로서비스, 데브옵스 프랙티스를 사용하여 클라우드 기반 애플리케이션과 서비스를 설계하고 운영하는 데 초점을 맞추고 있다. 
클라우드 네이티브 애플리케이션은 확장성, 가용성 및 자동화와 같은 클라우드의 기능과 이점을 활용하도록 설계되었습니다.


마이크로서비스 아키텍처(, MSA)는 응용 프로그램을 느슨하게 결합된 서비스의 모음으로 구조화하는 소프트웨어 아키텍처 스타일이다. 
각 서비스는 고유한 프로세스를 실행하고 API를 통해 통신하여 특정 비즈니스 기능을 제공합니다. 
MSA를 사용하면 단일 아키텍처에 비해 더 빠른 개발, 더 쉬운 유지보수 및 향상된 복원력을 제공할 수 있습니다. 
또한 개별 서비스를 독립적으로 구축하고 확장할 수 있으므로 민첩성과 비용 효율성이 향상됩니다.


데브옵스는 소프트웨어 개발자와 IT 운영 간의 협업과 소통을 강조하는 문화적, 기술적 운동이다. 
그것은 개발 수명 주기를 단축하고 고품질 소프트웨어의 지속적인 전달과 배포를 제공하는 것을 목표로 한다. 
DevOps 방식에는 지속적인 통합 및 제공, 코드로서의 인프라스트럭처, 모니터링 및 로깅이 포함됩니다. 
DevOps의 목표는 시스템의 신뢰성과 안정성을 보장하면서 효율성을 높이고 오류를 줄이며 소프트웨어 전송 속도를 향상시키는 것입니다.


명령 질의 책임 분리(, CQRS)는 시스템에서 데이터를 읽고 쓰는 문제를 분리하는 아키텍처 패턴이다. 
응용 프로그램을 업데이트 처리를 담당하는 명령 측과 정보 검색을 담당하는 쿼리 측의 두 부분으로 나눕니다. 
이러한 분리를 통해 읽기 및 쓰기가 최적화되고 확장성이 향상되며 복잡한 데이터 액세스 패턴을 유연하게 처리할 수 있습니다. 
CQRS는 성능, 신뢰성 및 확장성을 향상시키는 데 도움이 될 수 있는 마이크로서비스 아키텍처에서 종종 사용됩니다.
